{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "User authentication",
  "Parameters": {
    "appName": {
      "Description": "Application name",
      "Type": "String",
      "Default": "shedstemplate"
    },
    "env": {
      "Description": "Environment",
      "Type": "String",
      "Default": "dev"
    },
    "permissionsBoundaryName": {
      "Description": "Permissions boundary",
      "Type": "String",
      "Default": "NONE"
    },
    "lambdaTriggerArn": {
      "Description": "Arn for lambda trigger function",
      "Type": "String"
    }
  },
  "Conditions": {
    "PermissionsBoundaryExists": {
      "Fn::Not": [{
        "Fn::Equals": [ { "Ref": "permissionsBoundaryName" }, "NONE" ]
      }]
    },
    "LambdaTriggerExists": {
      "Fn::Not": [{
        "Fn::Equals": [ { "Ref": "lambdaTriggerArn" }, "NONE" ]
      }]
    }
  },
  "Resources": {
    "AuthRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              { "Ref": "appName" },
              { "Ref": "env" },
              "authRole"
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": { "Ref": "IdentityPool" }
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated"
                }
              }
            }
          ]
        },
        "PermissionsBoundary": {
          "Fn::If": [
            "PermissionsBoundaryExists",
            { "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:policy/${permissionsBoundaryName}" },
            { "Ref": "AWS::NoValue" }
          ]
        }
      }
    },
    "UnauthRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              { "Ref": "appName" },
              { "Ref": "env" },
              "unauthRole"
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": { "Ref": "IdentityPool" }
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "unauthenticated"
                }
              }
            }
          ]
        },
        "PermissionsBoundary": {
          "Fn::If": [
            "PermissionsBoundaryExists",
            { "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:policy/${permissionsBoundaryName}" },
            { "Ref": "AWS::NoValue" }
          ]
        }
      }
    },
    "UserPool": {
      "Type": "AWS::Cognito::UserPool",
      "DeletionPolicy" : "Retain",
      "UpdateReplacePolicy": "Retain",
      "Properties": {
        "UserPoolName": {
          "Fn::Join": [
            "-",
            [
              { "Ref": "appName" },
              { "Ref": "env" },
              "userpool"
            ]
          ]
        },
        "UserPoolTags": {
          "project": {
            "Ref": "appName"
          },
          "env": {
            "Ref": "env"
          }
        },
        "UsernameConfiguration": {
          "CaseSensitive": "false"
        },
        "Schema": [
          {
            "Name": "email",
            "Required": "true",
            "Mutable": "true"
          },
          {
            "Name": "name",
            "Required": "true",
            "Mutable": "true"
          }
        ],
        "AutoVerifiedAttributes": ["email"],
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly" : true,
          "InviteMessageTemplate" : {
            "EmailMessage" : "Welcome to the Flow Photo Explorer!<br><br>Here is your username and temporary password:<br><br>username: <strong>{username}</strong><br>password: <strong>{####}</strong><br><br>Please log in to set your password and complete your registration within the next 7 days.",
            "EmailSubject" : "[FPE] New Account for the Flow Photo Explorer"
          },
          "UnusedAccountValidityDays" : 7
        },
        "EmailVerificationMessage": "Your verification code is {####}. Please return to FPE and use this code to verify your email address.",
        "EmailVerificationSubject": "[FPE] Your Verification Code",
        "Policies": {
          "PasswordPolicy": {
            "MinimumLength": 8,
            "RequireLowercase": "true",
            "RequireNumbers": "true",
            "RequireSymbols": "false",
            "RequireUppercase": "true"
          }
        },
        "UsernameAttributes": ["email"],
        "MfaConfiguration": "OFF",
        "LambdaConfig": {
          "PostConfirmation": {
            "Fn::If": [
              "LambdaTriggerExists",
              { "Ref": "lambdaTriggerArn" },
              { "Ref": "AWS::NoValue" }
            ]
          }
        }
      }
    },
    "UserPoolGroupAdmins": {
      "Type": "AWS::Cognito::UserPoolGroup",
      "Properties": {
        "GroupName": "admins",
        "Precedence": 1,
        "RoleArn": {
          "Fn::GetAtt": [ "UserPoolGroupAdminsRole", "Arn" ]
        },
        "UserPoolId": { "Ref": "UserPool" }
      }
    },
    "UserPoolGroupAdminsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              { "Ref": "appName" },
              { "Ref": "env" },
              "userpool",
              "groupAdminsRole"
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": { "Ref": "IdentityPool" }
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated"
                }
              }
            }
          ]
        },
        "PermissionsBoundary": {
          "Fn::If": [
            "PermissionsBoundaryExists",
            { "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:policy/${permissionsBoundaryName}" },
            { "Ref": "AWS::NoValue" }
          ]
        }
      }
    },
    "UserPoolClientWeb": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "ClientName": {
          "Fn::Join": [
            "-",
            [
              { "Ref": "appName" },
              { "Ref": "env" },
              "userpool",
              "clientWeb"
            ]
          ]
        },
        "RefreshTokenValidity": 30,
        "UserPoolId": {
          "Ref": "UserPool"
        }
      },
      "DependsOn": "UserPool"
    },
    "UserPoolClient": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "ClientName": {
          "Fn::Join": [
            "-",
            [
              { "Ref": "appName" },
              { "Ref": "env" },
              "userpool",
              "client"
            ]
          ]
        },
        "GenerateSecret": true,
        "RefreshTokenValidity": 30,
        "UserPoolId": {
          "Ref": "UserPool"
        }
      },
      "DependsOn": "UserPool"
    },
    "IdentityPool": {
      "Type": "AWS::Cognito::IdentityPool",
      "Properties": {
        "IdentityPoolName": {
          "Fn::Join": [
            "-",
            [
              { "Ref": "appName" },
              { "Ref": "env" },
              "identitypool"
            ]
          ]
        },
        "CognitoIdentityProviders": [
          {
            "ClientId": { "Ref": "UserPoolClient" },
            "ProviderName": {
              "Fn::Sub": [
                "cognito-idp.${region}.amazonaws.com/${client}",
                {
                  "region": { "Ref": "AWS::Region" },
                  "client": { "Ref": "UserPool" }
                }
              ]
            }
          },
          {
            "ClientId": { "Ref": "UserPoolClientWeb" },
            "ProviderName": {
              "Fn::Sub": [
                "cognito-idp.${region}.amazonaws.com/${client}",
                {
                  "region": { "Ref": "AWS::Region" },
                  "client": { "Ref": "UserPool" }
                }
              ]
            }
          }
        ],
        "AllowUnauthenticatedIdentities": true
      }
    },
    "IdentityPoolRoleMap": {
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
      "Properties": {
        "IdentityPoolId": {
          "Ref": "IdentityPool"
        },
        "Roles": {
          "unauthenticated": {
            "Fn::GetAtt": [ "UnauthRole", "Arn" ]
          },
          "authenticated": {
            "Fn::GetAtt": [ "AuthRole", "Arn" ]
          }
        }
      },
      "DependsOn": [ "IdentityPool", "AuthRole", "UnauthRole" ]
    }
  },
  "Outputs": {
    "IdentityPoolId": {
      "Value": { "Ref": "IdentityPool" },
      "Description": "ID for identity pool"
    },
    "IdentityPoolName": {
      "Value": { "Fn::GetAtt": [ "IdentityPool", "Name" ] },
      "Description": "Name for identity pool"
    },
    "UserPoolId": {
      "Value": { "Ref": "UserPool" },
      "Description": "ID for user pool"
    },
    "UserPoolArn": {
      "Value": { "Fn::GetAtt": [ "UserPool", "Arn" ] },
      "Description": "Arn for user pool"
    },
    "UserPoolClientWebId": {
      "Value": { "Ref": "UserPoolClientWeb" },
      "Description": "User pool client id for web app"
    },
    "UserPoolClientID": {
      "Value": { "Ref": "UserPoolClient" },
      "Description": "User pool client id"
    },
    "UserPoolGroupAdminsRole": {
      "Value": { "Ref": "UserPoolGroupAdminsRole" },
      "Description": "User pool admins group role"
    },
    "UserPoolGroupAdminsRoleArn": {
      "Value": {
        "Fn::GetAtt": [ "UserPoolGroupAdminsRole", "Arn" ]
      },
      "Description": "Arn for user pool admins group role"
    },
    "AuthRoleArn": {
      "Description": "Arn for auth role",
      "Value": {
        "Fn::GetAtt": [ "AuthRole", "Arn" ]
      }
    },
    "AuthRoleName": {
      "Description": "Name for auth role",
      "Value": {
        "Fn::Join": [
          "-",
          [
            { "Ref": "appName" },
            { "Ref": "env" },
            "authRole"
          ]
        ]
      }
    },
    "UnauthRoleArn": {
      "Description": "Arn for unauth role",
      "Value": {
        "Fn::GetAtt": [ "UnauthRole", "Arn" ]
      }
    },
    "UnauthRoleName": {
      "Description": "Name for unauth role",
      "Value": {
        "Fn::Join": [
          "-",
          [
            { "Ref": "appName" },
            { "Ref": "env" },
            "unauthRole"
          ]
        ]
      }
    }
  }
}