AWSTemplateFormatVersion: 2010-09-09
Description: Lambda function to process imagesets for FPE
Parameters:
  functionName:
    Type: String
    Default: fpe-lambda-imageset
  storageBucket:
    Type: String
    Default: walkerenvres-fpe-storage
  securityGroupId:
    Type: String
    Default: sg-04c571df12b1778c5
  subnetIds:
    Type: CommaDelimitedList
    Default: 'subnet-0c14f9d14103e7827,subnet-0f4f0de2167008616,subnet-0450b593d088917a4'
  roleName:
    Type: String
    Default: fpe-lambda-imageset-role
  policyName:
    Type: String
    Default: fpe-lambda-imageset-policy
  dbHost:
    Type: String
  dbDatabase:
    Type: String
  dbUser:
    Type: String
  dbPassword:
    Type: String
Resources:
  LambdaFunction:
    Type: "AWS::Lambda::Function"
    DependsOn: LambdaExecutionRole
    Properties:
      FunctionName: !Ref functionName
      Tags:
        - Key: project
          Value: fpe
        - Key: env
          Value: dev
      Handler: index.handler
      Environment:
        Variables:
          REGION: !Ref "AWS::Region"
          FPE_DB_HOST: !Ref dbHost
          FPE_DB_PORT: 5432
          FPE_DB_DATABASE: !Ref dbDatabase
          FPE_DB_USER: !Ref dbUser
          FPE_DB_PASSWORD: !Ref dbPassword
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: nodejs12.x
      Timeout: "60"
      MemorySize: "256"
      Code: ../lambda/imageset
      VpcConfig:
        SecurityGroupIds:
          - !Ref securityGroupId
        SubnetIds: !Ref subnetIds
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Ref roleName
      Tags:
        - Key: project
          Value: fpe
        - Key: env
          Value: dev
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      # Uncomment for CHS
      # PermissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy/csr-Developer-Permissions-Boundary
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
  LambdaExecutionPolicy:
    Type: "AWS::IAM::Policy"
    DependsOn: LambdaExecutionRole
    Properties:
      PolicyName: !Ref policyName
      Roles: [!Ref LambdaExecutionRole]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: !Sub
              - >-
                arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*
              - region: !Ref "AWS::Region"
                account: !Ref "AWS::AccountId"
                lambda: !Ref LambdaFunction
          - Effect: Allow
            Action:
              - "s3:GetObject"
              - "s3:PutObject"
            Resource: !Sub 'arn:aws:s3:::${storageBucket}/*'
Outputs:
  Region:
    Value: !Ref "AWS::Region"
  FunctionName:
    Value: !Ref LambdaFunction
  FunctionArn:
    Value: !GetAtt LambdaFunction.Arn