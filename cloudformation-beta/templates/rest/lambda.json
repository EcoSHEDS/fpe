{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Lambda function for Admin API",
  "Parameters": {
    "appName": {
      "Description": "Application name",
      "Type": "String"
    },
    "env": {
      "Description": "Environment",
      "Type": "String"
    },
    "permissionsBoundaryName": {
      "Description": "Permissions boundary",
      "Type": "String",
      "Default": "NONE"
    }
  },
  "Conditions": {
    "PermissionsBoundaryExists": {
      "Fn::Not": [{
        "Fn::Equals": [ { "Ref": "permissionsBoundaryName" }, "NONE" ]
      }]
    }
  },
  "Resources": {
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [ "LambdaExecutionRole" ],
      "Properties": {
        "Handler": "lambda.handler",
        "FunctionName": {
          "Fn::Join": [
            "-",
            [
              { "Ref": "appName" },
              { "Ref": "env" },
              "restLambda"
            ]
          ]
        },
        "Environment": {
          "Variables": {
            "ENV": { "Ref": "env" }
          }
        },
        "Role": { "Fn::GetAtt": [ "LambdaExecutionRole", "Arn" ] },
        "Runtime": "nodejs14.x",
        "Timeout": "25",
        "Code": "../../../api/"
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              { "Ref": "appName" },
              { "Ref": "env" },
              "restLambdaRole"
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "PermissionsBoundary": {
          "Fn::If": [
            "PermissionsBoundaryExists",
            { "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:policy/${permissionsBoundaryName}" },
            { "Ref": "AWS::NoValue" }
          ]
        }
      }
    },
    "LambdaExecutionPolicy": {
      "DependsOn": [ "LambdaExecutionRole" ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Fn::Join": [
            "-",
            [
              { "Ref": "appName" },
              { "Ref": "env" },
              "restLambdaPolicy"
            ]
          ]
        },
        "Roles": [ { "Ref": "LambdaExecutionRole" } ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": {
                "Fn::Sub": [
                  "arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*",
                  {
                    "region": {
                      "Ref": "AWS::Region"
                    },
                    "account": {
                      "Ref": "AWS::AccountId"
                    },
                    "lambda": {
                      "Ref": "LambdaFunction"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "LambdaName": {
      "Value": { "Ref": "LambdaFunction" }
    },
    "LambdaArn": {
      "Value": { "Fn::GetAtt": [ "LambdaFunction", "Arn" ] }
    },
    "LambdaExecutionRole": {
      "Value": { "Ref": "LambdaExecutionRole" }
    }
  }
}